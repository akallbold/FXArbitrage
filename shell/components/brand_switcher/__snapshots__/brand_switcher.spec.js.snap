// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<BrandMenuItem /> should render a heading if \`isHeading\` is true 1`] = `
<div
  className="item heading"
>
  <Connect(Link)
    className="link"
    href={
      Object {
        "pathname": "/brands/[someBrandId]/[channel]/manager/",
        "query": Object {
          "refresh": 3,
        },
      }
    }
  >
    Baby Goat Wings
  </Connect(Link)>
</div>
`;

exports[`<BrandMenuItem /> should render a menu item if \`isHeading\` is false 1`] = `
<div
  className="item"
>
  <Connect(Link)
    className="link"
    href={
      Object {
        "pathname": "/brands/6/facebook/manager/campaigns",
        "query": Object {
          "refresh": 6,
        },
      }
    }
  >
    Furp
  </Connect(Link)>
</div>
`;

exports[`<BrandMenuItem /> should render a menu item with selected class if \`isSelected\` is true 1`] = `
<div
  className="item"
>
  <Connect(Link)
    className="link"
    href={
      Object {
        "pathname": "/brands/7/facebook/manager/campaigns",
        "query": Object {
          "refresh": 7,
        },
      }
    }
  >
    Baby Goat Wings
  </Connect(Link)>
</div>
`;

exports[`<BrandSwitcher /> should render properly given \`isOpen\` is false 1`] = `
<div
  className="switcher  "
  id="brand-switcher"
>
  <span
    className="button"
  >
    <div
      className="secondaryText"
    >
      Brand
    </div>
    <div
      className="primaryText"
      onClick={[Function]}
    >
      <span>
        Nike/Football
         
        <test-file-stub
          className="downArrowIcon"
        />
      </span>
    </div>
  </span>
</div>
`;

exports[`<BrandSwitcher /> should render properly given all props 1`] = `
<div
  className="switcher is-open "
  id="brand-switcher"
>
  <span
    className="button"
  >
    <div
      className="secondaryText"
    >
      Brand
    </div>
    <div
      className="primaryText"
      onClick={[Function]}
    >
      <span>
        Nike/Football
         
        <test-file-stub
          className="downArrowIcon"
        />
      </span>
    </div>
  </span>
  <Connect(BrandsMenu)
    brands={
      Array [
        Object {
          "companyId": 1,
          "companyName": "Nike",
          "id": 1,
          "isSelected": true,
          "name": "Nike/Football",
        },
        Object {
          "companyId": 1,
          "companyName": "Nike",
          "id": 2,
          "isSelected": false,
          "name": "Nike/Baseball",
        },
        Object {
          "companyId": 2,
          "companyName": "Tommee Tippee",
          "id": 3,
          "isSelected": false,
          "name": "Explora EasiFlow",
        },
        Object {
          "companyId": 3,
          "companyName": "Baby Goat Wings",
          "id": 4,
          "isSelected": false,
          "name": "Sasquatch",
        },
        Object {
          "companyId": 2,
          "companyName": "Tommee Tippee",
          "id": 5,
          "isSelected": false,
          "name": "Sippee Cups",
        },
        Object {
          "companyId": 3,
          "companyName": "Baby Goat Wings",
          "id": 6,
          "isSelected": false,
          "name": "Furp",
        },
        Object {
          "companyId": 3,
          "companyName": "Baby Goat Wings",
          "id": 7,
          "isSelected": false,
          "name": "Baby Goat Wings",
        },
      ]
    }
  />
</div>
`;

exports[`<BrandSwitcher /> should render properly given empty \`brands\` AND no \`label\` 1`] = `
<div
  className="switcher is-open no-content"
  id="brand-switcher"
>
  <span
    className="button"
  >
    <div
      className="secondaryText"
    >
      Brand
    </div>
    <div
      className="primaryText"
      onClick={[Function]}
    >
      <test-file-stub
        className="tinySpinner"
      />
    </div>
  </span>
  <Connect(BrandsMenu)
    brands={Array []}
  />
</div>
`;

exports[`<BrandSwitcher /> should render with \`brandName\` over \`label\` if available 1`] = `
<div
  className="switcher is-open "
  id="brand-switcher"
>
  <span
    className="button"
  >
    <div
      className="secondaryText"
    >
      Brand
    </div>
    <div
      className="primaryText"
      onClick={[Function]}
    >
      <span>
        Nike/Football
         
        <test-file-stub
          className="downArrowIcon"
        />
      </span>
    </div>
  </span>
  <Connect(BrandsMenu)
    brands={
      Array [
        Object {
          "companyId": 1,
          "companyName": "Nike",
          "id": 1,
          "isSelected": true,
          "name": "Nike/Football",
        },
        Object {
          "companyId": 1,
          "companyName": "Nike",
          "id": 2,
          "isSelected": false,
          "name": "Nike/Baseball",
        },
        Object {
          "companyId": 2,
          "companyName": "Tommee Tippee",
          "id": 3,
          "isSelected": false,
          "name": "Explora EasiFlow",
        },
        Object {
          "companyId": 3,
          "companyName": "Baby Goat Wings",
          "id": 4,
          "isSelected": false,
          "name": "Sasquatch",
        },
        Object {
          "companyId": 2,
          "companyName": "Tommee Tippee",
          "id": 5,
          "isSelected": false,
          "name": "Sippee Cups",
        },
        Object {
          "companyId": 3,
          "companyName": "Baby Goat Wings",
          "id": 6,
          "isSelected": false,
          "name": "Furp",
        },
        Object {
          "companyId": 3,
          "companyName": "Baby Goat Wings",
          "id": 7,
          "isSelected": false,
          "name": "Baby Goat Wings",
        },
      ]
    }
  />
</div>
`;

exports[`<BrandSwitcher /> should render with fallback \`label\` given empty \`brands\` 1`] = `
<div
  className="switcher is-open "
  id="brand-switcher"
>
  <span
    className="button"
  >
    <div
      className="secondaryText"
    >
      Brand
    </div>
    <div
      className="primaryText"
      onClick={[Function]}
    >
      <span>
        Fallback Label
         
        <test-file-stub
          className="downArrowIcon"
        />
      </span>
    </div>
  </span>
  <Connect(BrandsMenu)
    brands={Array []}
  />
</div>
`;

exports[`<BrandsMenu /> should render properly given all props 1`] = `
<div
  className="menu"
  onKeyDown={[Function]}
>
  <div
    className="heading"
  >
    <SearchInput
      className="searchInput"
      inputProps={
        Object {
          "placeholder": "Find Brands",
        }
      }
      isLive={true}
      name="filter-brands"
      onChange={[Function]}
      submitIcon={null}
    />
  </div>
  <BrandsMenuList
    arrowKeyedToIndex={0}
    brands={
      Array [
        Object {
          "isHeading": true,
          "label": "Baby Goat Wings",
          "orgId": 3,
          "orgType": "company",
        },
        Object {
          "hrefPathname": "/brands/7/facebook/manager/campaigns",
          "isSelected": false,
          "label": "Baby Goat Wings",
          "orgId": 7,
          "orgType": "brand",
        },
        Object {
          "hrefPathname": "/brands/6/facebook/manager/campaigns",
          "isSelected": false,
          "label": "Furp",
          "orgId": 6,
          "orgType": "brand",
        },
        Object {
          "hrefPathname": "/brands/4/facebook/manager/campaigns",
          "isSelected": false,
          "label": "Sasquatch",
          "orgId": 4,
          "orgType": "brand",
        },
        Object {
          "isHeading": true,
          "label": "Nike",
          "orgId": 1,
          "orgType": "company",
        },
        Object {
          "hrefPathname": "/brands/2/facebook/manager/campaigns",
          "isSelected": false,
          "label": "Nike/Baseball",
          "orgId": 2,
          "orgType": "brand",
        },
        Object {
          "hrefPathname": "/brands/1/facebook/manager/campaigns",
          "isSelected": true,
          "label": "Nike/Football",
          "orgId": 1,
          "orgType": "brand",
        },
        Object {
          "isHeading": true,
          "label": "Tommee Tippee",
          "orgId": 2,
          "orgType": "company",
        },
        Object {
          "hrefPathname": "/brands/3/facebook/manager/campaigns",
          "isSelected": false,
          "label": "Explora EasiFlow",
          "orgId": 3,
          "orgType": "brand",
        },
        Object {
          "hrefPathname": "/brands/5/facebook/manager/campaigns",
          "isSelected": false,
          "label": "Sippee Cups",
          "orgId": 5,
          "orgType": "brand",
        },
      ]
    }
    query=""
  />
</div>
`;

exports[`<BrandsMenuList /> should render no results message given empty brands 1`] = `
<div
  className="brandsList"
>
  <h4
    className="noResults"
  >
    Sorry, no results for "
    testing
    "
  </h4>
</div>
`;

exports[`<BrandsMenuList /> should render properly given all props 1`] = `
<div
  className="brandsList"
>
  <BrandMenuItem
    arrowKeyedTo={true}
    classes=""
    hrefPathname="/brands/[someBrandId]/[channel]/manager/"
    isHeading={true}
    isSelected={false}
    itemRef={[Function]}
    label="Baby Goat Wings"
    orgId={3}
    orgType="company"
  />
  <BrandMenuItem
    arrowKeyedTo={false}
    classes=""
    hrefPathname="/brands/7/facebook/manager/campaigns"
    isHeading={false}
    isSelected={false}
    itemRef={[Function]}
    label="Baby Goat Wings"
    orgId={7}
    orgType="brand"
  />
  <BrandMenuItem
    arrowKeyedTo={false}
    classes=""
    hrefPathname="/brands/6/facebook/manager/campaigns"
    isHeading={false}
    isSelected={false}
    itemRef={[Function]}
    label="Furp"
    orgId={6}
    orgType="brand"
  />
  <BrandMenuItem
    arrowKeyedTo={false}
    classes=""
    hrefPathname="/brands/4/facebook/manager/campaigns"
    isHeading={false}
    isSelected={false}
    itemRef={[Function]}
    label="Sasquatch"
    orgId={4}
    orgType="brand"
  />
  <BrandMenuItem
    arrowKeyedTo={false}
    classes=""
    hrefPathname="/brands/[someBrandId]/[channel]/manager/"
    isHeading={true}
    isSelected={false}
    itemRef={[Function]}
    label="Nike"
    orgId={1}
    orgType="company"
  />
  <BrandMenuItem
    arrowKeyedTo={false}
    classes=""
    hrefPathname="/brands/2/facebook/manager/campaigns"
    isHeading={false}
    isSelected={false}
    itemRef={[Function]}
    label="Nike/Baseball"
    orgId={2}
    orgType="brand"
  />
  <BrandMenuItem
    arrowKeyedTo={false}
    classes=""
    hrefPathname="/brands/1/facebook/manager/campaigns"
    isHeading={false}
    isSelected={true}
    itemRef={[Function]}
    label="Nike/Football"
    orgId={1}
    orgType="brand"
  />
  <BrandMenuItem
    arrowKeyedTo={false}
    classes=""
    hrefPathname="/brands/[someBrandId]/[channel]/manager/"
    isHeading={true}
    isSelected={false}
    itemRef={[Function]}
    label="Tommee Tippee"
    orgId={2}
    orgType="company"
  />
  <BrandMenuItem
    arrowKeyedTo={false}
    classes=""
    hrefPathname="/brands/3/facebook/manager/campaigns"
    isHeading={false}
    isSelected={false}
    itemRef={[Function]}
    label="Explora EasiFlow"
    orgId={3}
    orgType="brand"
  />
  <BrandMenuItem
    arrowKeyedTo={false}
    classes=""
    hrefPathname="/brands/5/facebook/manager/campaigns"
    isHeading={false}
    isSelected={false}
    itemRef={[Function]}
    label="Sippee Cups"
    orgId={5}
    orgType="brand"
  />
</div>
`;
